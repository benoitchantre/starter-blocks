name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy the plugin to'
        type: string
        default: 'staging'
        required: true
      url:
        description: 'The URL to the site'
        type: string
        required: true
    secrets:
      SSH_KEY:
        description: 'The private key to use for SSH authentication'
        required: true
      SSH_CONFIG:
        description: 'The SSH configuration to use for SSH authentication'
        required: true
      KNOWN_HOSTS:
        description: 'The known hosts to use for SSH authentication'
        required: true
      DEPLOY_PATH:
        description: 'The path to deploy the plugin files to'
        required: true

# Cancels all previous workflow runs for the same host that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the environment.
  group: ${{ github.workflow }}-deploy-${{ inputs.environment }}
  cancel-in-progress: true

jobs:
  staging:
    name: Staging
    runs-on: ubuntu-latest
    if: ${{ inputs.environment == 'staging' }}
    timeout-minutes: 5
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.url }}
    env:
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
      KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}

    steps:
      - uses: actions/checkout@v5
        with:
          sparse-checkout: .github

      - name: Set the PLUGIN_NAME environment variable
        uses: ./.github/actions/set-plugin-name
        with:
          plugin-name: ${{ vars.PLUGIN_NAME }}

      - name: Check that the plugin name equals DEPLOY_PATH basename
        run: |
          if [ "$(basename "${DEPLOY_PATH}")" != "${PLUGIN_NAME}" ] ; then
            echo "Error: The deployment path (${DEPLOY_PATH}) must contain the plugin name (${PLUGIN_NAME})"
            exit 1
          fi

      - name: Check that the parent directory of DEPLOY_PATH is "plugins"
        run: |
          if [ "$(basename $(dirname "${DEPLOY_PATH}"))" != "plugins" ] ; then
            echo "Error: The parent directory of DEPLOY_PATH must be 'plugins'"
            exit 1
          fi

      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.PLUGIN_NAME }}
          path: dist/${{ env.PLUGIN_NAME }}

      - name: Extract the host from the URL
        env:
          URL: ${{ inputs.url }}
        run: echo "HOST=$(echo ${URL} | awk -F/ '{print $3}')" >> $GITHUB_ENV

      - name: Configure SSH
        uses: benoitchantre/setup-ssh-authentication-action@1.0.1
        with:
          private-key: ${{ secrets.SSH_KEY }}
          ssh-config: ${{ secrets.SSH_CONFIG }}
          known-hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Create the plugin directory
        run: ssh ${HOST} "mkdir -p ${DEPLOY_PATH%/}"

      - name: Sync files
        run: rsync -avz --checksum --delete-after dist/${PLUGIN_NAME}/. "${HOST}:${DEPLOY_PATH%/}/."

      - name: Purge static cache
        run: ssh ${HOST} "bash -s" < .github/scripts/purge_cache "${DEPLOY_PATH}"
